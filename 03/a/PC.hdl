// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //Increment regOut => incRegOut
    Inc16(in=regOut, out=incRegOut); 

    //If inc==1, select the incremented version, else proceed with regOut
    Mux16(a=regOut, b=incRegOut, sel=inc, out=regOrIncReg);

    //If load==1, select the given in, else proceed with regOrIncReg
    Mux16(a=regOrIncReg, b=in, sel=load, out=regOrIn);

    //If reset==1, select a 16 bit 0 value, else proceed with regOrIn from above
    Mux16(a=regOrIn, b[0..15]=false, sel=reset, out=regOrInOr0);

    //Input the final selected value into a register to store
    Register(in=regOrInOr0, load=true, out=regOut);

    //Send regOut to out
    And16(a=regOut, b[0..15]=true, out=out);
}
